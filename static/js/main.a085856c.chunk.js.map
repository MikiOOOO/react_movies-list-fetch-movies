{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","setMovie","movieTitle","setMovieTitle","notFoundMovie","setNotFoundMovie","isLoading","setIsLoading","searchForMovie","event","a","preventDefault","query","fetch","then","res","json","catch","Response","Error","searchedMovie","Title","Plot","Poster","imdbID","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","cn","disabled","onClick","App","setMovies","useCallback","prevMovies","some","m","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a085856c.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport cn from 'classnames';\nimport { Movie } from '../../types/Movie';\n// import { MovieData } from '../../types/MovieData';\nimport { getMovie } from '../../api';\nimport { MovieData } from '../../types/MovieData';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieCard } from '../MovieCard';\n\ninterface FindMovieProps {\n  addMovie: (movie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<FindMovieProps> = ({ addMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [movieTitle, setMovieTitle] = useState<string>('');\n  const [notFoundMovie, setNotFoundMovie] = useState<string>('');\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  const searchForMovie = async (event: FormEvent) => {\n    let searchedMovie: MovieData | ResponseError;\n\n    event.preventDefault();\n    setIsLoading(true);\n\n    try {\n      searchedMovie = await getMovie(movieTitle);\n\n      if ('Title' in searchedMovie) {\n        const defaultPoster\n          = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n        const {\n          Title, Plot, Poster, imdbID,\n        } = searchedMovie;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster || defaultPoster,\n          imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n          imdbId: imdbID,\n        });\n      } else {\n        setNotFoundMovie(movieTitle);\n      }\n    } catch (error) {\n      return error;\n    } finally {\n      setIsLoading(false);\n    }\n\n    return 0;\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => searchForMovie(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={movieTitle}\n              onChange={(event) => {\n                setMovieTitle(event.target.value);\n                setNotFoundMovie('');\n              }}\n            />\n          </div>\n\n          {movieTitle && movieTitle === notFoundMovie && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn('button is-light', {\n                'is-loading': isLoading,\n              })}\n              disabled={!movieTitle}\n            >\n              {`${!movie ? 'Find a movie' : 'Search Again'}`}\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => {\n                  addMovie(movie);\n                  setMovie(null);\n                }}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=4b943326';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useCallback, useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = useCallback((movie: Movie) => {\n    setMovies(prevMovies => {\n      const isOnTheList = prevMovies.some(m => m.imdbId === movie.imdbId);\n\n      if (isOnTheList) {\n        return [...prevMovies];\n      }\n\n      return [...prevMovies, movie];\n    });\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}